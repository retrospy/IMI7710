// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// ---------- //
// write_trig //
// ---------- //

#define write_trig_wrap_target 0
#define write_trig_wrap 3

static const uint16_t write_trig_program_instructions[] = {
            //     .wrap_target
    0x2081, //  0: wait   1 gpio, 1                  
    0xc020, //  1: irq    wait 0                     
    0x2001, //  2: wait   0 gpio, 1                  
    0xc021, //  3: irq    wait 1                     
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program write_trig_program = {
    .instructions = write_trig_program_instructions,
    .length = 4,
    .origin = -1,
};

static inline pio_sm_config write_trig_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + write_trig_wrap_target, offset + write_trig_wrap);
    return c;
}

#include "hardware/clocks.h"
#include "hardware/gpio.h"
static inline void write_trig_program_init(PIO pio, uint sm, uint offset) 
{    
    pio_sm_config c = write_trig_program_get_default_config(offset);
    pio_sm_init(pio, sm, offset, &c);
    pio_sm_set_enabled(pio, sm, true);
}

#endif

